---
- name: clean out the package manager cache
  command: '{{ ansible_pkg_mgr }} clean all'

- name: install distribution-independent dependencies
  package:
    name: '{{ item }}'
    state: latest
  with_items:
   - ansible
   - augeas                   # developer UX
   - bridge-utils             #
   - bsdtar                   # Origin build/package
   - bzip2                    #
   - bzr                      #
   - bind                     #
   - bind-utils               #
   - btrfs-progs-devel        #
   - ctags                    #
   - createrepo               # Origin build/package
   - deltarpm                 # vagrant-openshift, should remove
   - device-mapper-devel      #
   - ethtool                  #
   - e2fsprogs                #
   - firefox                  # Origin Web Console tests
   - fontconfig               #
   - git                      # Interacting with repos
   - gcc                      #
   - gcc-c++                  #
   - glibc-static             #
   - gnuplot                  # Origin test logger
   - google-chrome-stable     # Origin Web Console tests
   - httpie                   # developer UX
   - hg                       #
   - iscsi-initiator-utils    #
   - jq                       # Origin e2e test, but should use jsonpath instead
   - java-1.?.0-openjdk       #
   - kernel-devel             #
   - krb5-devel               # Origin build/package | Origin GSSAPI tests
   - libsemanage-python       # OpenShift-Ansible (upstream this)
   - libselinux-devel         #
   - libnetfilter_queue-devel #
   - lsof                     # developer UX
   - make                     # Interacting with repos
   - mlocate                  # vagrant-openshift, should remove
   - npm                      # Origin Web Console tests
   - ntp                      #
   - openldap-clients         # Origin LDAP tests
   - openssl                  # Origin `test-cmd` tests
   - openvswitch              #
   - python-dbus              # OpenShift-Ansible (upstream this)
   - rubygems                 #
   - screen                   # developer UX
   - socat                    # Origin `oc cluster up`
   - sqlite-devel             #
   - strace                   # developer UX
   - sysstat                  # developer UX
   - tcpdump                  # developer UX
   - tig                      # developer UX
   - tito                     # Origin build/package
   - tmux                     # developer UX
   - tree                     # developer UX
   - unzip                    # Origin build/package
   - vim                      # developer UX
   - wget                     # developer UX
   - xfsprogs                 #
   - xorg-x11-utils           # Origin Web Console tests
   - Xvfb                     # Origin Web Console tests
   - yum-utils                #
   - zip                      # Origin build/package
   - iptables-service

- name: install distribution-dependent dependencies
  package:
    name: '{{ item.package }}'
    state: latest
  when: ansible_distribution in item.distros
  with_items:
    - package: facter
      distros: [
        'CentOS',
        'RedHat'
      ]

- name: install ChromeDriver to enable headless UI testing
  unarchive:
    src: https://chromedriver.storage.googleapis.com/2.16/chromedriver_linux64.zip
    copy: no # TODO: change to `remote_src: yes` once https://github.com/ansible/ansible-modules-core/issues/4752 is fixed
    dest: /usr/bin
    mode: u=rwx,g=rx,o=rx
    owner: root
    creates: /usr/bin/chromedriver

# we need the --exclude functionality from yum so we
# cannot use the agnostic package module from Ansible
- name: install yum if the host does not have it
  package:
    name: yum
    state: present
  when: ansible_pkg_mgr != 'yum'

- name: update all non-kernel packages to latest state
  yum:
    name: '*'
    exclude: 'kernel*'
    state: latest

- name: determine installed npm version
  command: "repoquery --pkgnarrow=installed --queryformat '%{version}' npm"
  register: origin_ci_installed_npm_version

- name: update npm to v3.7.3
  command: '/usr/bin/npm install npm@3.7.3 --global'
  when: origin_ci_installed_npm_version.stdout | version_compare('3.7.3', '<')

- name: document all the installed packages for the build logs
  command: '{{ ansible_pkg_mgr }} list installed'